wifi_test$ID <- NULL
#split the trainingset in 2 so the independent variables (WAPS) can be adjusted
train_set_yvars <- wifi_train[c((ncol(wifi_train)-8):ncol(wifi_train))]
train_set_wapcolumns <- wifi_train[-c((ncol(wifi_train)-8):ncol(wifi_train))]
#split the testset in 2 so the independent variables (WAPS) can be adjusted
test_set_yvars <- wifi_test[c((ncol(wifi_test)-8):ncol(wifi_test))]
test_set_wapcolumns <- wifi_test[-c((ncol(wifi_test)-8):ncol(wifi_test))]
train_set_wapcolumns[train_set_wapcolumns == 100] <- -100
test_set_wapcolumns[test_set_wapcolumns == 100] <- -100
train_set_wapcolumns[train_set_wapcolumns >= -30] <- train_set_wapcolumns[train_set_wapcolumns >= -30] -30
#remove rows without variance in both test and training set
train_set_yvars <- train_set_yvars[-which(apply(train_set_wapcolumns, 1, var) == 0), ]
train_set_wapcolumns <- train_set_wapcolumns[-which(apply(train_set_wapcolumns, 1, var) == 0), ]
#remove rows without variance in both test and testing set
test_set_yvars <- test_set_yvars[-which(apply(test_set_wapcolumns, 1, var) == 0), ]
test_set_wapcolumns <- test_set_wapcolumns[-which(apply(test_set_wapcolumns, 1, var) == 0), ]
train_set_wapcolumns <- 100 + train_set_wapcolumns
test_set_wapcolumns <- 100 + test_set_wapcolumns
#combine dataframe again and remove the seperate parts
wifi_train <- bind_cols(train_set_wapcolumns, train_set_yvars)
wifi_test <- bind_cols(test_set_wapcolumns, test_set_yvars)
#remove the dataframes that wont be used anymore
remove(train_set_yvars, train_set_wapcolumns)
#create empty lists that will be used in the loop
x_list_train <- list()
y_list_train <- list()
x_list_test <- list()
y_list_test <- list()
#how big should the data partition be?
no_rows_partition <- 5000
#which values should be added as a dependent variable?
y_names <- c("BUILDINGID", "FLOOR", "LATITUDE", "LONGITUDE")
#change class of building and floor to factor
wifi_train$BUILDINGID <- as.factor(wifi_train$BUILDINGID)
wifi_train$FLOOR <- as.factor(wifi_train$FLOOR)
wifi_test$BUILDINGID <- as.factor(wifi_test$BUILDINGID)
wifi_test$FLOOR <- as.factor(wifi_test$FLOOR)
#change unix time variable to actual datetime
wifi_train$DateTime <- anytime(wifi_train$TIMESTAMP)
wifi_test$DateTime <- anytime(wifi_test$TIMESTAMP)
#for loop that creates smaller data frames for each data dependent variable
for (i in 1:length(y_names)){
set.seed(124)
#create the data partition of the full trainingset
train_id <- createDataPartition(y = wifi_train[,c(y_names[i])],
p = no_rows_partition/nrow(wifi_train),
list = FALSE)
#use the partition to generate the training set that will be used
training <- wifi_train[train_id,]
#remove columns without variance in both test and training set
testing <- wifi_test[-which(apply(training, 2, var) == 0)]
training <- training[-which(apply(training, 2, var) == 0)]
#seperate x and y values for each training dataframe
#this makes the df for the independent variables (x)
assign("throwaway_x_train",
training[ , grepl( "WAP" , names(training))])
#seperate x and y values for each test dataframe
#this makes the df for the dependent variable (x)
assign("throwaway_x_test",
testing[ , grepl( "WAP" , names(testing))])
#normalize rows in the train & test dataframe
throwaway_x_train <- as.data.frame(scale(t(throwaway_x_train)))
throwaway_x_test <- as.data.frame(scale(t(throwaway_x_test)))
throwaway_x_train <- as.data.frame(t(throwaway_x_train))
throwaway_x_test <- as.data.frame(t(throwaway_x_test))
#assign training and testing x & y frames seperately in a list
x_list_train[[y_names[i]]] <- throwaway_x_train
y_list_train[y_names[i]] <- training[y_names[i]]
x_list_test[[y_names[i]]] <- throwaway_x_test
y_list_test[y_names[i]] <- testing[y_names[i]]
remove(throwaway_x_train)
remove(throwaway_x_test)
remove(training)
remove(testing)
}
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
#read results into R
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#plot results
ggplot(all_y_values) +
geom_point((aes(x = LONGITUDE, y = LATITUDE))) +
geom_point((aes(x = knn_predict_LONGITUDE, y = knn_predict_LATITUDE, colour = knn_predict_FLOOR))) +
facet_wrap("FLOOR")
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
predictions <- readRDS("knn 12-03")
predictions <- readRDS("2019-03-13 predicted values3")
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#plot results
ggplot(all_y_values) +
geom_point((aes(x = LONGITUDE, y = LATITUDE))) +
geom_point((aes(x = knn_predict_LONGITUDE, y = knn_predict_LATITUDE, colour = knn_predict_FLOOR))) +
facet_wrap("FLOOR")
#create specific dataframe for floors of building 1
B1_floor1_train <- train_set_wapcolumns_1 %>% filter(FLOOR == 1 &
LONGITUDE > -7530 &
LONGITUDE < -7450 &
LATITUDE > 4864835 & LATITUDE < 4864905)
B1_floor_rest_train <- train_set_wapcolumns_1 %>% filter(!((FLOOR == 1 & LONGITUDE > -7530 &
LONGITUDE < -7450 & LATITUDE > 4864835 & LATITUDE < 4864905) | FLOOR == 0))
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons2.R', echo=TRUE)
#create specific train dataframe for floors of building 2
#Floor 4
B2_floor4_train <- train_set_wapcolumns_2 %>% filter(FLOOR == 4 &
LONGITUDE > -7370 &
LONGITUDE < -7330 &
LATITUDE > 4864720 &
LATITUDE < 4864775)
#setup libraries
rm(list = ls())
set.seed(124)
library(ggplot2)
library(anytime)
library(caret)
library(readr)
library(tidyr)
#import data
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles")
wifi_train <- read.csv("trainingData.csv", header=TRUE, row.names=NULL, sep = ",")
library(dplyr)
wifi_test <- read.csv("validationData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_train$train <- 0
wifi_test$train <- 1
wifi_train <- bind_rows(wifi_train, wifi_test)
ggplot(wifi_train) +
geom_point(aes(x = LATITUDE, y = LONGITUDE, x = train))
wifi_train
ggplot(wifi_train) +
geom_point(aes(x = LATITUDE, y = LONGITUDE, x = train))
wifi_train <- read.csv("trainingData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_test <- read.csv("validationData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_train <- bind_rows(wifi_train, wifi_test[2:nrow(wifi_test), ])
ggplot(wifi_train) +
geom_point(aes(x = LATITUDE, y = LONGITUDE, x = train))
ggplot(wifi_train) +
geom_point(aes(x = LATITUDE, y = LONGITUDE, colour = train))
wifi_train$colour <- as.factor(wifi_train$colour)
#import data
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles")
wifi_train <- read.csv("trainingData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_test <- read.csv("validationData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_train$train <- 0
wifi_test$train <- 1
wifi_train <- bind_rows(wifi_train, wifi_test[2:nrow(wifi_test), ])
wifi_train$colour <- as.factor(wifi_train$colour)
wifi_train$train <- as.factor(1)
wifi_test$train <- as.factor(2)
wifi_train <- bind_rows(wifi_train, wifi_test)
wifi_train$colour <- as.factor(wifi_train$colour)
#import data
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles")
wifi_train <- read.csv("trainingData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_test <- read.csv("validationData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_train$train <- as.factor(1)
wifi_test$train <- as.factor(2)
wifi_train <- bind_rows(wifi_train, wifi_test)
wifi_test
wifi_train
wifi_train <- read.csv("trainingData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_test <- read.csv("validationData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_train$train <- "hello"
wifi_test$train <- "hai"
wifi_train <- bind_rows(wifi_train, wifi_test)
ggplot(wifi_train) +
geom_point(aes(x = LATITUDE, y = LONGITUDE, colour = train))
ggplot(wifi_train) +
geom_point(aes(x = LONGITUDE, y = LATITUDE, colour = train))
ggplot(wifi_train) +
geom_point(aes(x = LONGITUDE, y = LATITUDE, colour = train)) +
facet_wrap("FLOOR")
wifi_train <- read.csv("trainingData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_test <- read.csv("validationData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_train$train <- "train"
wifi_test$train <- "test"
wifi_train <- bind_rows(wifi_train, wifi_test)
ggplot(wifi_train) +
geom_point(aes(x = LONGITUDE, y = LATITUDE, colour = train)) +
facet_wrap("FLOOR")
#import data
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles")
wifi_train <- read.csv("trainingData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_test <- read.csv("validationData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_train$train <- "train"
ggplot(wifi_train) +
geom_point(aes(x = LONGITUDE, y = LATITUDE, colour = train)) +
facet_wrap("FLOOR")
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons2.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons2.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/Exploratory files/1) Exploring the data.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons2.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons2.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#plot results
ggplot(all_y_values) +
geom_point((aes(x = LONGITUDE, y = LATITUDE))) +
geom_point((aes(x = knn_predict_LONGITUDE, y = knn_predict_LATITUDE, colour = knn_predict_FLOOR))) +
facet_wrap("FLOOR")
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#plot results
ggplot(all_y_values) +
geom_point((aes(x = LONGITUDE, y = LATITUDE))) +
geom_point((aes(x = knn_predict_LONGITUDE, y = knn_predict_LATITUDE, colour = knn_predict_FLOOR))) +
facet_wrap("FLOOR")
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#plot results
ggplot(all_y_values) +
geom_point((aes(x = LONGITUDE, y = LATITUDE))) +
geom_point((aes(x = knn_predict_LONGITUDE, y = knn_predict_LATITUDE, colour = knn_predict_FLOOR))) +
facet_wrap("FLOOR")
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
all_y_values1 <- all_y_values %>% filter(BUILDINGID == 1)
#change filter the predictions per building
all_y_values0 <- all_y_values %>% filter(BUILDINGID == 0)
all_y_values2 <- all_y_values %>% filter(BUILDINGID == 2)
confusionMatrix(data = all_y_values0$knn_predict_FLOOR, all_y_values0$FLOOR)
confusionMatrix(data = all_y_values1$knn_predict_FLOOR, all_y_values1$FLOOR)
confusionMatrix(data = all_y_values2$knn_predict_FLOOR, all_y_values2$FLOOR)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
predictions <- readRDS("2019-03-14 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#setup libraries
rm(list = ls())
set.seed(124)
library(readr)
library(ggplot2)
library(anytime)
library(caret)
library(dplyr)
library(tidyr)
#import data
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles")
wifi_train <- read.csv("trainingData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_test <- read.csv("validationData.csv", header=TRUE, row.names=NULL, sep = ",")
wifi_train$train <- "train"
wifi_test$train <- "test"
wifi_train <- bind_rows(wifi_train, wifi_test)
ggplot(wifi_train) +
geom_point(aes(x = LONGITUDE, y = LATITUDE, colour = train)) +
facet_wrap("FLOOR")
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
predictions <- readRDS("2019-03-14 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#plot results
ggplot(all_y_values) +
geom_point((aes(x = LONGITUDE, y = LATITUDE))) +
geom_point((aes(x = knn_predict_LONGITUDE, y = knn_predict_LATITUDE, colour = knn_predict_FLOOR))) +
facet_wrap("FLOOR")
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-14 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/2) Caret applied.R', echo=TRUE)
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-14 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
source('C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Code/1) Data setup with floor addons.R', echo=TRUE)
predictions <- readRDS("2019-03-13 predicted values3")
#This file will give the results and plot the predictions to see where the errors occur
#For more information, visit http://archive.ics.uci.edu/ml/datasets/UJIIndoorLoc
#########################################################################################
#set working directory to get the resultss
setwd("C:/Users/Jeroen/Desktop/Ubiqum/IoT Analytics/Task 3 - Techniques for Wifi Locationing/Excel datafiles/Results")
predictions <- readRDS("2019-03-13 predicted values3")
#add all actual y values in 1 dataframe with the results
predictions <- data.frame(predictions)
y_df_test <- data.frame(y_list_test)
predictions$ID <- seq.int(nrow(predictions))
y_df_test$ID <- seq.int(nrow(y_df_test))
all_y_values <- left_join(y_df_test, predictions, by = "ID")
#Confusion matrices of the floors and buildings
confusionMatrix(data = all_y_values$knn_predict_FLOOR, all_y_values$FLOOR)
#plot results
ggplot(all_y_values) +
geom_point((aes(x = LONGITUDE, y = LATITUDE))) +
geom_point((aes(x = knn_predict_LONGITUDE, y = knn_predict_LATITUDE, colour = knn_predict_FLOOR))) +
facet_wrap("FLOOR")
confusionMatrix(data = all_y_values$knn_predict_BUILDING, all_y_values$BUILDING)
